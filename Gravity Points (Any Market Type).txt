//@version=5
// Carefully crafted by https://www.tradingview.com/u/cryptoexorcist/
indicator("Gravity Points", overlay=true)

// Phase 1: Identifying the Oversold Candles

// RSI Calculation
rsi_length1 = input.int(14, title="RSI Length 1")
rsi1 = ta.rsi(close, rsi_length1)

// Moving Average Calculation
ma50_length1 = input.int(50, title="MA 50 Length 1")
ma501 = ta.sma(close, ma50_length1)

ma21_length1 = input.int(21, title="MA 21 Length 1")
ma211 = ta.sma(close, ma21_length1)

ma100_length1 = input.int(100, title="MA 100 Length 1")
ma1001 = ta.sma(close, ma100_length1)

ma300_length1 = input.int(300, title="MA 300 Length 1")
ma3001 = ta.sma(close, ma300_length1)

// Bearish Candle Condition
bearishCandle = close < open

// Track the occurrence of oversold
oversold1 = rsi1 < 20

// Track whether banana, rocket, unicorn, cucumber, and moai have been printed
var bool bananaPrinted1 = false
var bool rocketPrintedNew1 = false // Different name
var bool cucumberPrintedNew1 = false // Different name
var bool unicornPrinted1 = false
var bool moaiPrinted1 = false
var bool moaiXCond1 = false // New variable
var bool moaiYCond1 = false // New variable

// Variable to store the last banana lower shadow price value
var float lastBananaPrice1 = na

// Track the status of the previous candles
var bool prevRocketNew1 = na // Different name
var bool prevBananaNew1 = na // Different name
var bool prevUnicorn1 = na
var bool prevCucumberNew1 = na // Different name
var bool prevMonkey1 = na

// Monkey patterns
ma50CrossedAbove1 = ta.crossover(close, ma501)
monkey1 = ma50CrossedAbove1

// Plot Monkey

if monkey1
    rocketPrintedNew1 := true // Different name

// Plot Banana under Bearish Candles in RSI Oversold
banana1 = bearishCandle and oversold1

if banana1
    bananaPrinted1 := true
    lastBananaPrice1 := low // Store the last banana lower shadow price value
    prevRocketNew1 := false // Different name
    prevBananaNew1 := true // Different name

// Phase 2: Calculate Banana Monkey Sequence and add Unicorn on Both True

// Mark Price Crossing Above 21-period Moving Average with Unicorn Emoji
priceCrossAboveMA3001 = ta.crossover(close, ma3001)
unicornCondition1 = priceCrossAboveMA3001 and bananaPrinted1 and rocketPrintedNew1 // Different name
if unicornCondition1
    bananaPrinted1 := false
    rocketPrintedNew1 := false // Different name
    unicornPrinted1 := true


// Update cucumberPrintedNew when cucumber is printed
cucumberPrintedNew1 := prevRocketNew1 and prevBananaNew1 // Different name

// Plot Moai
moai1 = prevMonkey1


// Phase 3: Filtering for Second Level Break

// Output the last banana lower shadow price value


// Mark banana candles that are both banana and close below the previous lastBananaPrice with a rocket
bananaBelowLastPrice1 = bearishCandle and close < lastBananaPrice1


// Plot Rocket if the previous candle was a banana and the candle before that was a rocket
rocketCondition1 = prevBananaNew1 and prevRocketNew1 // Different names


// Plot Cucumber if the previous candle was a rocket and the candle before that was a banana
cucumberCondition1 = prevRocketNew1 and prevBananaNew1 // Different names
//plotshape(cucumberCondition1, style=shape.labelup, location=location.belowbar, color=color.aqua, text="ü¶Ñ", size=size.small)

// Update previous candle status
prevRocketNew1 := bearishCandle and oversold1 // Different name
prevBananaNew1 := banana1 // Different name
prevUnicorn1 := unicornCondition1
prevCucumberNew1 := cucumberCondition1 // Different name
prevMonkey1 := monkey1

// Update moaiYCond
moaiYCond1 := moaiXCond1 and prevMonkey1 // New condition

if cucumberCondition1
    alert("303" + syminfo.ticker, alert.freq_once_per_bar)

// Combining with the second script

// Calculate the volume peak
volume_peak = ta.highest(volume, 30)

// Check if the current volume is a peak
is_volume_peak = volume == volume_peak

// Calculate RSI
rsi_length = 14
rsi_overbought = 68
rsi_oversold = 32
rsi = ta.rsi(close, rsi_length)

// Check if RSI is oversold or overbought
is_rsi_oversold = rsi < rsi_oversold
is_rsi_overbought = rsi > rsi_overbought

// Calculate MA50
ma38 = ta.sma(close, 38)

// Calculate MA21
ma21 = ta.sma(close, 21)

// Check for MA50 crosses
ma38_cross_up = ta.crossover(close, ma38)
ma38_cross_down = ta.crossunder(close, ma38)

// Define boolean variables to track the sequence condition
var bool cucumber_monkey_sequence = false
var bool unicorn_monkey_sequence = false

// Check for the sequence of cucumber and monkey emojis
if is_volume_peak and is_rsi_oversold
    cucumber_monkey_sequence := true

// Check for the sequence of unicorn, monkey, and water emojis
if is_rsi_overbought and is_volume_peak
    unicorn_monkey_sequence := true

// Plot the monkey emoji above candles with volume peaks
//plotshape(is_volume_peak, style=shape.labelup, location=location.belowbar, color=color.green, text="üêµ", size=size.small)

// Plot the cucumber emoji above candles with RSI oversold
//plotshape(is_rsi_oversold, style=shape.labelup, location=location.abovebar, color=color.red, text="ü•í", size=size.small)

// Plot the unicorn emoji above candles with RSI overbought
//plotshape(is_rsi_overbought, style=shape.labelup, location=location.abovebar, color=color.blue, text="ü¶Ñ", size=size.small)

// Plot the water emoji when MA38 crosses down
//plotshape(ma38_cross_down, style=shape.labeldown, location=location.abovebar, color=color.blue, text="üíß", size=size.small)

// Plot the fire emoji above candles where MA50 crosses
//plotshape(ma38_cross_up, style=shape.labelup, location=location.abovebar, color=color.orange, text="üî•", size=size.small)

// Plot the rocket emoji when the sequence of cucumber and monkey occurs
plotshape(cucumber_monkey_sequence and ma38_cross_up, style=shape.labelup, location=location.belowbar, color=color.black, text="üöÄ", size=size.tiny)

plotshape(unicorn_monkey_sequence and ma38_cross_down, style=shape.labeldown, location=location.abovebar, color=color.black, text="üåï", size=size.tiny)

// Reset the cucumber_monkey_sequence variable
if cucumber_monkey_sequence and ma38_cross_up
    cucumber_monkey_sequence := false

// Reset the unicorn_monkey_water_sequence variable
if unicorn_monkey_sequence and ma38_cross_down
    unicorn_monkey_sequence := false
